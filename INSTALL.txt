Here's some instructions on how to build and install libdll.

1. Create Makefiles (cmake needed)
    
    If you want to install into a non-standard location you can use the
    CMAKE_INSTALL_PREFIX cmake option to change the destination:

        -DCMAKE_INSTALL_PREFIX:PATH=/opt/libdll

    You can use this cmake option to build with or without tests. You will need
    to have cunit (http://cunit.sourceforge.net/) installed in order to use
    this:

        -DDLL_WITH_TESTS:BOOL=TRUE

    I would suggest building out of tree, so you might want to make yourself a
    build directory somewhere:

        mkdir build
        cd build

    Finally run cmake with any of the above options. I prefixed the cmake
    command with the CFLAGS that I wanted to use, you will probably want to use
    your own ones. If in doubt just omit any CFLAGS.

        CFLAGS="-march=nocona -O2 -pipe -Wall -Werror" cmake [OPTS] /path/to/libdll/src/

2. Build
    
        make

    Running make in your build directory will build the shared libdll library
    and optionally a 'dlltest' binary which runs some unit tests on the library:

3. Install

        make install

    There is no need to install if for instance you just want to run dlltest.
    cmake will set everything up accordingly. Just go ahead and run test/dlltest
    from the build direcotry.
    I would suggest to do so before installing anyway. 

4. Update your dynamic linker

    You might need to change the ld configuration to include any custom install
    prefix/lib directories and rerun ldconfig.

